############################### DEFAULT #####################################
# Chain ID
CHAIN_ID=167006

# Exposed ports
PORT_L3_EXECUTION_ENGINE_HTTP=8549
PORT_L3_EXECUTION_ENGINE_WS=8550
PORT_L3_EXECUTION_ENGINE_METRICS=6061
PORT_L3_EXECUTION_ENGINE_P2P=30307
PORT_PROMETHEUS=9092
PORT_GRAFANA=3002

# Comma separated L2 execution engine bootnode URLs for P2P discovery bootstrap
BOOT_NODES=enode://c7abe368a92fb398ec7008c137cff899896b12c579c57e4717fc9a3393d4fe76cead2b305c65817d35b116268e6796f22d1eb0ff38da263c081cd04d8a50e3dd@34.170.120.239:30303,enode://b35475fd231345ee37d22aa97c23acf4b712ee2c707525bfb087114b2a0a615051318136f301857ef6bfe61a3b6a94fee48dc66c1a7d2e2af765f8c25f1d5f5a@35.222.66.46:30303,enode://11a6183bb12a35ec66191832ff1d0b9f10d80cee68d8aa45cf271dfa872526fcd55c247806dbfab05ce5d50bf48c52ba3549d1d2a904e022aecad0e70e842121@34.71.74.144:30303,enode://6367d19c4608dc43531a3b30c85abf1997bf0ffc9b6c04f6bbd65206f8c325cc236ff224d0413fa402450674fc4fc96ef21bb7ded48c91579ecb68700e761a90@43.135.181.84:30303,enode://476400a939e2416d7e32d1aeb18f07a21ee5f89395775c5984effe30db8c7544e7e9cf2a5fe5d115ded278785cc5677860371e358fc165df90ee1f0038c4b1f9@43.153.21.92:30303,enode://a3f5f53c9665be5a97a64c99e0000612924f69670d70a46dbcc77b0407da435d8d7414a17c00d94d90ec3da46cc889d1dc6141f98faf61c8f0daa2fdac8286de@43.153.11.192:30303

# Taiko protocol contract addresses
TAIKO_L1_ADDRESS=0x4e7c942D51d977459108bA497FDc71ae0Fc54a00 # A TaikoL1 contract address on L2
PROVER_POOL_ADDRESS=0xC9580414A4372BDdBd8e19e01854DC0B2b1390Cf # A ProverPool contract address on L2
TAIKO_L2_ADDRESS=0x1000777700000000000000000000000000000001 # A TaikoL2 contract address on L3

# P2P
DISABLE_P2P_SYNC=false

# GETH CONFIGS
# whether to allow unprotected tx, do not enable if you dont know what you are doing
ALLOW_UNPROTECTED_TXS=false


############################### REQUIRED #####################################
# L2 RPC endpoints (you will need to run a fully synced L2 node to start a L3 node)
# If you are using a local Taiko L2 node, you can refer to it as "http://host.docker.internal:8547" and "ws://host.docker.internal:8548", which refer to the default ports in the .env.sample for an L2 node.
# However, you may need to add this host to docker-compose.yml. If that does not work, you can try the private local ip address (e.g. http:/192.168.1.15:8547). You can find that with `ip addr show` or a similar command.
L2_ENDPOINT_HTTP=
L2_ENDPOINT_WS=

############################### OPTIONAL #####################################
# If you want to be a prover who generates and submits zero knowledge proofs of proposed L3 blocks, you need to change
# `ENABLE_PROVER` to true and set `L2_PROVER_PRIVATE_KEY`.
ENABLE_PROVER=false
PROVE_UNASSIGNED_BLOCKS=false
# How many provers you want to run concurrently, note that each prover will cost ~16 cores / ~32 GB memory.
ZKEVM_CHAIN_INSTANCES_NUM=1
# A L2 account (with balance) private key which will send the TaikoL1.proveBlock transactions.
# WARNING: only use a test account, pasting your private key in plain text here is not secure.
L2_PROVER_PRIVATE_KEY=
# Gas limit for proveBlock transactions (in gas)
PROVE_BLOCK_TX_GAS_LIMIT=1000000
# Skip size, proof every N blocks, set to a number to prove every 10th, 12th, 15th, 18th block, etc.
# instead of every block
PROOF_SKIP_SIZE=
# If you want to be a proposer who proposes L3 execution engine's transactions in mempool to Taiko L1 protocol (on L2)
# contract (be a "mining L3 node"), you need to change `ENABLE_PROPOSER` to true, then fill `L2_PROPOSER_PRIVATE_KEY`
# and `L3_SUGGESTED_FEE_RECIPIENT`
ENABLE_PROPOSER=false
# A L2 account (with balance) private key who will send TaikoL1.proposeBlock L2 transactions
L2_PROPOSER_PRIVATE_KEY=
# A L3 account address who will be the tx fee beneficiary of the L2 blocks that you proposed
L3_SUGGESTED_FEE_RECIPIENT=
# Gas limit for proposeBlock transactions (in gas)
PROPOSE_BLOCK_TX_GAS_LIMIT=800000
# Maximum gas tip used for proposeBlock transactions (in wei)
PROPOSE_BLOCK_TX_GAS_TIP_CAP=50000000000

# Comma-delimited local tx pool addresses you want to prioritize, useful to set your proposer to only propose blocks with your prover's transactions
TXPOOL_LOCALS=

# Timeout when waiting for a propose or prove block transaction receipt to be seen, in seconds
WAIT_RECEIPT_TIMEOUT=360
